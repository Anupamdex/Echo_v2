
from tkinter import *
import time
from PIL import ImageTk,Image
from functools import partial
import edit_app_test

m_key = "roger"

def bg_resizer(img, w_value, h_value):        
    raw = Image.open(img)
    #OPEN and RESIZE image
    resized = raw.resize(((int(w_value)), (int(h_value))), Image.Resampling.LANCZOS)
    final = ImageTk.PhotoImage(resized)
    return final


def app(win, w_value, h_value):                      # call this later # call from speech R after collecting name


    global resized_welcome_bg, resized_page_bg, re_main_b1, re_main_b2, re_main_b3, re_main_b4, re_main_b5, re_main_b5, re_main_b6
    #global re_content_box
    #Resources
    default_welcome_img = "default_files/background.png"
    default_page_img = "default_files/page_bg.png"
    main_b1 = "default_files/img0.png"
    main_b2 = "default_files/img1.png"
    main_b3 = "default_files/img2.png"
    main_b4 = "default_files/img3.png"
    main_b5 = "default_files/img4.png"
    main_b6 = "default_files/img5.png"
    exit_b = "default_files/exit_b0.png"

    content_box = "default_files/content_box.png"

    home_c1 = "default_files/home/home_c1.png"
    home_c2 = "default_files/home/home_c2.png"
    home_c3 = "default_files/home/home_c3.png"
    ach_c1 = "default_files/achieve/ach_1.png"
    ach_c2 = "default_files/achieve/ach_2.png"
    ach_c3 = "default_files/achieve/ach_3.png"
    exp_c1 = "default_files/explore/exp_c1.png"
    exp_c2 = "default_files/explore/exp_c2.png"
    exp_c3 = "default_files/explore/exp_c3.png"

    more_1 = "default_files/more/more_1.png"
    more_2 = "default_files/more/more_2.png"
    more_3 = "default_files/more/more_3.png"


    global default_tick
    default_tick = 0

    if default_tick == True:
        welcome_bg = default_welcome_img
        page_bg = default_page_img

    else :
        welcome_bg = "new_files/background.png"
        page_bg = "new_files/page_bg.png"



    
    print("importing app here")
    C1 = Canvas(win, background="red", width= w_value, height= h_value, highlightthickness= 0)
    C1.place(x=0, y=0)
    Label(C1, text="hey").place(x=0, y=0)

    resized_welcome_bg = bg_resizer(welcome_bg, w_value, h_value)
    C1.create_image(0,0, anchor= NW, image= resized_welcome_bg)
    
    g = open("sample.txt", "r")
    content = g.readlines()
    title_text = content[1].strip()
    greet_text = content[2].strip()
    print(title_text)
    print(greet_text)

    L1 = Label(C1, text= greet_text , font=("Calibri", int(int(h_value)/10)), bg="black", fg="white")
    L1.place(relx= 0.5, rely= 0.5, anchor= CENTER)

    L2 = Label(C1, text= title_text , font=("Times", int(int(h_value)/20)), bg="#0B0B0B", fg="white")
    L2.place(relx= 0.5, rely= 0.11, anchor= CENTER)

    #buttons
    def button_call(page, text):
        print("Redirected to : "+ text)
        footer = Label(content_label, text= text, font=("calibri", int(int(h_value)/35), "italic"), bg="black", fg="white")
        footer.place(relx=0.14, rely=0.92, anchor= CENTER)

    def call(page):
        global page_frame, page_label, resized_page_bg, e_b, re_content_box, content_label
        global re_home_c1, re_home_c2, re_home_c3, re_exp_c1, re_exp_c2, re_exp_c3
        global re_ach_c1, re_ach_c2, re_ach_c3, re_m_c1, re_m_c2, re_m_c3

        page_frame = Frame(C1, width= w_value, height= h_value)
        page_frame.place(x=0, y=0)
        
        resized_page_bg = bg_resizer(page_bg, w_value, h_value)
        page_label = Label(page_frame, image= resized_page_bg, border=0, highlightthickness= 0)
        page_label.place(x=0, y=0)

        re_content_box = bg_resizer(content_box, int(int(w_value)*(6/8)), int(int(h_value)*(4/5)))
        content_label = Label(page_label, image= re_content_box, border=0, highlightthickness= 0)
        content_label.place(relx= 0.5, rely= 0.5, anchor= CENTER)
        ##

        def exit_main_page():
            print("Returned to Main welocme page")
            page_frame.place_forget()
            page_label.place_forget()
            main_exit.place_forget()

        e_b = bg_resizer(exit_b, int(int(w_value)/8), int(int(h_value)/8))
        main_exit = Button(page_label, image= e_b, border=0
                           , highlightthickness=0, activebackground="black", command= exit_main_page)
        main_exit.place(relx= 0.9, rely= 0.85, anchor= CENTER)


        if page == "home":
            button_call(page, "Home")
            re_home_c1 = bg_resizer(home_c1, int(int(w_value)/4.4), int(int(h_value)/2.2))
            re_home_c2 = bg_resizer(home_c2, int(int(w_value)/4.4), int(int(h_value)/2.2))
            re_home_c3 = bg_resizer(home_c3, int(int(w_value)/4.4), int(int(h_value)/2.2))

            def exit_sub_page():
                content_sub_label.place_forget()
                sub_footer_label.pack_forget()
                sub_exit.place_forget()

            def container(sub_footer):
                global content_sub_label, sub_exit, sub_footer_label
                #Label(content_label, width= 800, height= 500).place(x=0, y=0)
                content_sub_label = Label(page_label, image= re_content_box, border=0, highlightthickness= 0)
                content_sub_label.place(relx= 0.5, rely= 0.5, anchor= CENTER)
                sub_exit = Button(page_label, image= e_b, border=0
                           , highlightthickness=0, activebackground="black", command= exit_sub_page)
                sub_exit.place(relx= 0.9, rely= 0.85, anchor= CENTER)
                sub_footer_label = Label(content_sub_label, text= sub_footer, font=("calibri", int(int(h_value)/35), "italic"), bg="black", fg="white")
                sub_footer_label.place(relx=0.14, rely=0.92, anchor= CENTER)                

            Button(content_label, image= re_home_c1, border=0, highlightthickness=0, command= partial(container, "Centre"), activebackground="#0B0B0B").place(relx=0.2, rely= 0.45, anchor= CENTER)
            Button(content_label, image= re_home_c2, border=0, highlightthickness=0, command= partial(container, "Courses"), activebackground="#0B0B0B").place(relx=0.5, rely= 0.45, anchor= CENTER)
            Button(content_label, image= re_home_c3, border=0, highlightthickness=0, command= partial(container, "Refer & Earn"), activebackground="#0B0B0B").place(relx=0.8, rely= 0.45, anchor= CENTER)


        if page == "explore":
            button_call(page, "Explore")
            re_exp_c1 = bg_resizer(exp_c1, int(int(w_value)/4.4), int(int(h_value)/2.2))
            re_exp_c2 = bg_resizer(exp_c2, int(int(w_value)/4.4), int(int(h_value)/2.2))
            re_exp_c3 = bg_resizer(exp_c3, int(int(w_value)/4.4), int(int(h_value)/2.2))

            def exit_sub_page():
                content_sub_label.place_forget()
                sub_footer_label.pack_forget()
                sub_exit.place_forget()

            def container(sub_footer):
                global content_sub_label, sub_exit, sub_footer_label
                #Label(content_label, width= 800, height= 500).place(x=0, y=0)
                content_sub_label = Label(page_label, image= re_content_box, border=0, highlightthickness= 0)
                content_sub_label.place(relx= 0.5, rely= 0.5, anchor= CENTER)
                sub_exit = Button(page_label, image= e_b, border=0
                                    , highlightthickness=0, activebackground="black", command= exit_sub_page)
                sub_exit.place(relx= 0.9, rely= 0.85, anchor= CENTER)
                sub_footer_label = Label(content_sub_label, text= sub_footer, font=("calibri", int(int(h_value)/35), "italic"), bg="black", fg="white")
                sub_footer_label.place(relx=0.14, rely=0.92, anchor= CENTER)    

            Button(content_label, image= re_exp_c1, border=0, highlightthickness=0, command= partial(container, "Structure"), activebackground="#0B0B0B").place(relx=0.2, rely= 0.45, anchor= CENTER)
            Button(content_label, image= re_exp_c2, border=0, highlightthickness=0, command= partial(container, "Documents"), activebackground="#0B0B0B").place(relx=0.5, rely= 0.45, anchor= CENTER)
            Button(content_label, image= re_exp_c3, border=0, highlightthickness=0, command= partial(container, "Creators"), activebackground="#0B0B0B").place(relx=0.8, rely= 0.45, anchor= CENTER)



        if page == "contact":
            button_call(page, "Contact")

        if page == "map":
            button_call(page, "Map")

        if page == "achieve":
            button_call(page, "Achievements")
            re_ach_c1 = bg_resizer(ach_c1, int(int(w_value)/4.4), int(int(h_value)/2.2))
            re_ach_c2 = bg_resizer(ach_c2, int(int(w_value)/4.4), int(int(h_value)/2.2))
            re_ach_c3 = bg_resizer(ach_c3, int(int(w_value)/4.4), int(int(h_value)/2.2))

            def exit_sub_page():
                content_sub_label.place_forget()
                sub_footer_label.pack_forget()
                sub_exit.place_forget()

            def container(sub_footer):
                global content_sub_label, sub_exit, sub_footer_label
                #Label(content_label, width= 800, height= 500).place(x=0, y=0)
                content_sub_label = Label(page_label, image= re_content_box, border=0, highlightthickness= 0)
                content_sub_label.place(relx= 0.5, rely= 0.5, anchor= CENTER)
                sub_exit = Button(page_label, image= e_b, border=0
                                    , highlightthickness=0, activebackground="black", command= exit_sub_page)
                sub_exit.place(relx= 0.9, rely= 0.85, anchor= CENTER)
                sub_footer_label = Label(content_sub_label, text= sub_footer, font=("calibri", int(int(h_value)/35), "italic"), bg="black", fg="white")
                sub_footer_label.place(relx=0.14, rely=0.92, anchor= CENTER)    

            Button(content_label, image= re_ach_c1, border=0, highlightthickness=0, command= partial(container, "Roll of honour"), activebackground="#0B0B0B").place(relx=0.2, rely= 0.45, anchor= CENTER)
            Button(content_label, image= re_ach_c2, border=0, highlightthickness=0, command= partial(container, "Placements"), activebackground="#0B0B0B").place(relx=0.5, rely= 0.45, anchor= CENTER)
            Button(content_label, image= re_ach_c3, border=0, highlightthickness=0, command= partial(container, "Certificates"), activebackground="#0B0B0B").place(relx=0.8, rely= 0.45, anchor= CENTER)

        if page == "more":
            button_call(page, "More")
            re_m_c1 = bg_resizer(more_1, int(int(w_value)/2), int(int(h_value)/6))
            re_m_c2 = bg_resizer(more_2, int(int(w_value)/2), int(int(h_value)/6))
            re_m_c3 = bg_resizer(more_3, int(int(w_value)/2), int(int(h_value)/6))

            def exit_sub_page():
                content_sub_label.place_forget()
                sub_footer_label.pack_forget()
                sub_exit.place_forget()

            def container(sub_footer):
                global content_sub_label, sub_exit, sub_footer_label
                #Label(content_label, width= 800, height= 500).place(x=0, y=0)
                content_sub_label = Label(page_label, image= re_content_box, border=0, highlightthickness= 0)
                content_sub_label.place(relx= 0.5, rely= 0.5, anchor= CENTER)
                sub_exit = Button(page_label, image= e_b, border=0
                                    , highlightthickness=0, activebackground="black", command= exit_sub_page)
                sub_exit.place(relx= 0.9, rely= 0.85, anchor= CENTER)
                sub_footer_label = Label(content_sub_label, text= sub_footer, font=("calibri", int(int(h_value)/40), "italic"), bg="black", fg="white")
                sub_footer_label.place(relx=0.14, rely=0.92, anchor= CENTER)    

            Button(content_label, image= re_m_c1, border=0, highlightthickness=0, command= partial(container, "Servo Syncing"), activebackground="#0B0B0B").place(relx=0.4, rely= 0.2, anchor= CENTER)
            Button(content_label, image= re_m_c2, border=0, highlightthickness=0, command= partial(container, "Advanced  Settings"), activebackground="#0B0B0B").place(relx=0.4, rely= 0.45, anchor= CENTER)
            Button(content_label, image= re_m_c3, border=0, highlightthickness=0, command= partial(container, "Exit from Mainloop"), activebackground="#0B0B0B").place(relx=0.4, rely= 0.7, anchor= CENTER)




    button_size = int(w_value)+int(h_value)
    bt_s = int(button_size/20)

    re_main_b1 = bg_resizer(main_b1, bt_s, bt_s)
    re_main_b2 = bg_resizer(main_b2, bt_s, bt_s)
    re_main_b3 = bg_resizer(main_b3, bt_s, bt_s)
    re_main_b4 = bg_resizer(main_b4, bt_s, bt_s)
    re_main_b5 = bg_resizer(main_b5, bt_s, bt_s)
    re_main_b6 = bg_resizer(main_b6, bt_s, bt_s)

    Button(C1, image= re_main_b1, command= partial(call, "home" )
           , border=0, highlightthickness=0, activebackground="#0B0B0B").place(relx= 0.2, rely=0.8)
    Button(C1, image= re_main_b2, command= partial(call, "explore" )
           , border=0, highlightthickness=0, activebackground="#0B0B0B").place(relx= 0.3, rely=0.8)
    Button(C1, image= re_main_b3, command= partial(call, "contact" )
           , border=0, highlightthickness=0, activebackground="#0B0B0B").place(relx= 0.4, rely=0.8)
    Button(C1, image= re_main_b4, command= partial(call, "map" )
           , border=0, highlightthickness=0, activebackground="#0B0B0B").place(relx= 0.5, rely=0.8)
    Button(C1, image= re_main_b5, command= partial(call, "achieve" )
           , border=0, highlightthickness=0, activebackground="#0B0B0B").place(relx= 0.6, rely=0.8)
    Button(C1, image= re_main_b6, command= partial(call, "more" )
           , border=0, highlightthickness=0, activebackground="#0B0B0B").place(relx= 0.7, rely=0.8)
    
    #win.mainloop()

    
def filler(w_value, h_value):
    
    win = Tk()
    win.geometry(w_value+"x"+h_value)
    win.resizable(False, False)

    def run_test():
        app(win, w_value, h_value)                  # calling main app

    test_b = Button(win, text="test run it", command= run_test).place(x=200, y=200)


    win.mainloop()


